# coding: utf-8
import ROOT
file = ROOT.TFile("test.root")

mass_eee = file.Get("AllData/ZMass_eee")
chans = ROOT.TH1D("chans", "channels", 5, 0, 5)
num_data_eee = mass_eee.Integral()
mass_eem = file.Get("AllData/ZMass_eem")
num_data_eem = mass_eem.Integral()
mass_emm = file.Get("AllData/ZMass_emm")
num_data_emm = mass_emm.Integral()
mass_mmm = file.Get("AllData/ZMass_mmm")
num_data_mmm = mass_mmm.Integral()

chans.SetBinContent(1, num_data_eee+num_data_emm+num_data_eem+num_data_mmm)
chans.SetBinContent(2, num_data_eee)
chans.SetBinContent(3, num_data_eem)
chans.SetBinContent(4, num_data_emm)
chans.SetBinContent(5, num_data_mmm)
chans.SetMinimum(0)
chans.Draw()

massfr_eee = file.Get("AllData/ZMass_Fakes_eee")
chans_fr = ROOT.TH1D("chans", "channels", 5, 0, 5)
num_eee = massfr_eee.Integral()
massfr_eem = file.Get("AllData/ZMass_Fakes_eem")
num_eem = massfr_eem.Integral()
massfr_emm = file.Get("AllData/ZMass_Fakes_emm")
num_emm = massfr_emm.Integral()
massfr_mmm = file.Get("AllData/ZMass_Fakes_mmm")
num_mmm = massfr_mmm.Integral()

chans_fr.SetBinContent(1, num_eee+num_emm+num_eem+num_mmm)
chans_fr.SetBinContent(2, num_eee)
chans_fr.SetBinContent(3, num_eem)
chans_fr.SetBinContent(4, num_emm)
chans_fr.SetBinContent(5, num_mmm)
chans_fr.SetLineColor(ROOT.kGray)
chans_fr.Draw("same")

massewk_eee = file.Get("AllEWK/ZMass_Fakes_eee")
num_ewk_eee = massewk_eee.Integral()
massewk_eem = file.Get("AllEWK/ZMass_Fakes_eem")
num_ewk_eem = massewk_eem.Integral()
massewk_emm = file.Get("AllEWK/ZMass_Fakes_emm")
num_ewk_emm = massewk_emm.Integral()
massewk_mmm = file.Get("AllEWK/ZMass_Fakes_mmm")
num_ewk_mmm = massewk_mmm.Integral()

chans_ewkcor = ROOT.TH1D("chans", "channels", 5, 0, 5)
chans_ewkcor.SetBinContent(1, num_eee+num_emm+num_eem+num_mmm - num_ewk_eee-num_ewk_emm-num_ewk_eem-num_ewk_mmm)
chans_ewkcor.SetBinContent(2, num_eee-num_ewk_eee)
chans_ewkcor.SetBinContent(3, num_eem-num_ewk_eem)
chans_ewkcor.SetBinContent(4, num_emm-num_ewk_emm)
chans_ewkcor.SetBinContent(5, num_mmm-num_ewk_mmm)
chans_ewkcor.SetLineColor(ROOT.kGreen)
chans_ewkcor.Draw("same")

mass_eee = file.Get("NonpromptMC/ZMass_eee")
chans_mc = ROOT.TH1D("chans_mc", "channels", 5, 0, 5)
num_mc_eee = mass_eee.Integral()
mass_eem = file.Get("NonpromptMC/ZMass_eem")
num_mc_eem = mass_eem.Integral()
mass_emm = file.Get("NonpromptMC/ZMass_emm")
num_mc_emm = mass_emm.Integral()
mass_mmm = file.Get("NonpromptMC/ZMass_mmm")
num_mc_mmm = mass_mmm.Integral()
chans_mc.SetBinContent(1, num_mc_eee+num_mc_emm+num_mc_eem+num_mc_mmm)
chans_mc.SetBinContent(2, num_mc_eee)
chans_mc.SetBinContent(3, num_mc_eem)
chans_mc.SetBinContent(4, num_mc_emm)
chans_mc.SetBinContent(5, num_mc_mmm)
chans_mc.SetLineColor(ROOT.kRed)
chans_mc.Draw("same")

canvas = ROOT.gROOT.FindObject("c1")
canvas.Print("~/www/WZFakeRate/bychan.pdf")
for chan in ["eee", "eem", "emm", "mmm"]:
    print "Results for %s chan:" % chan
    print "-"*80
    for i in ["PPF", "PFP", "FPP", "PFF", "FPF", "FFP", "FFF"]:
        hist = file.Get("AllData/ZMass_%s_%s" % (i,chan))
        print "Data yield", i, "is", hist.Integral()
        hist = file.Get("AllEWK/ZMass_%s_%s" % (i,chan))
        print "EWK yield", i, "is", hist.Integral()
        hist = file.Get("NonpromptMC/ZMass_%s_%s" % (i,chan))
        print "Nonprompt MC yield", i, "is", hist.Integral()
        print ""
